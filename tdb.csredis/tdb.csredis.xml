<?xml version="1.0"?>
<doc>
    <assembly>
        <name>tdb.csredis</name>
    </assembly>
    <members>
        <member name="T:tdb.csredis.CSRedisCache">
            <summary>
            reids缓存
            </summary>
        </member>
        <member name="F:tdb.csredis.CSRedisCache.rds">
            <summary>
            redis
            </summary>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.#ctor(System.String[])">
            <summary>
            构造函数
            </summary>
            <param name="connectionStrings">连接字符串集合</param>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Get(System.String)">
            <summary>
            获取指定 key 的值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Get``1(System.String)">
            <summary>
            获取指定 key 的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Set(System.String,System.Object,System.TimeSpan,System.Nullable{CSRedis.RedisExistence})">
            <summary>
            设置指定 key 的值，所有写入参数object都支持string | byte[] | 数值 | 对象
            </summary>
            <param name="key"></param>
            <param name="value">值</param>
            <param name="expire">过期时间</param>
            <param name="exists"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.SetAsync(System.String,System.Object,System.TimeSpan,System.Nullable{CSRedis.RedisExistence})">
            <summary>
            设置指定 key 的值，所有写入参数object都支持string | byte[] | 数值 | 对象
            </summary>
            <param name="key"></param>
            <param name="value">值</param>
            <param name="expire">过期时间</param>
            <param name="exists"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Del(System.String[])">
            <summary>
            用于在 key 存在时删除 key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.DelAsync(System.String[])">
            <summary>
            用于在 key 存在时删除 key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Exists(System.String)">
            <summary>
            检查给定 key 是否存在
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Expire(System.String,System.TimeSpan)">
            <summary>
            为给定 key 设置过期时间
            </summary>
            <param name="key"></param>
            <param name="expire">过期时间</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.ExpireAsync(System.String,System.TimeSpan)">
            <summary>
            为给定 key 设置过期时间
            </summary>
            <param name="key"></param>
            <param name="expire">过期时间</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.ExpireAt(System.String,System.DateTime)">
            <summary>
            为给定 key 设置过期时间
            </summary>
            <param name="key"></param>
            <param name="expire">过期时间</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.ExpireAtAsync(System.String,System.DateTime)">
            <summary>
            为给定 key 设置过期时间
            </summary>
            <param name="key"></param>
            <param name="expire">过期时间</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Keys(System.String)">
            <summary>
            查找所有分区节点中符合给定模式(pattern)的 key
            </summary>
            <param name="pattern">如：runoob*</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HGet(System.String,System.String)">
            <summary>
            获取存储在哈希表中指定字段的值
            </summary>
            <param name="key"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HGet``1(System.String,System.String)">
            <summary>
            获取存储在哈希表中指定字段的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HGetAll(System.String)">
            <summary>
            获取在哈希表中指定 key 的所有字段和值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HGetAll``1(System.String)">
            <summary>
            获取在哈希表中指定 key 的所有字段和值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HSet(System.String,System.String,System.Object)">
            <summary>
            将哈希表 key 中的字段 field 的值设为 value
            </summary>
            <param name="key"></param>
            <param name="field">字段</param>
            <param name="value">值</param>
            <returns>如果字段是哈希表中的一个新建字段，并且值设置成功，返回true。如果哈希表中域字段已经存在且旧值已被新值覆盖，返回false。</returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HSetAsync(System.String,System.String,System.Object)">
            <summary>
            将哈希表 key 中的字段 field 的值设为 value
            </summary>
            <param name="key"></param>
            <param name="field">字段</param>
            <param name="value">值</param>
            <returns>如果字段是哈希表中的一个新建字段，并且值设置成功，返回true。如果哈希表中域字段已经存在且旧值已被新值覆盖，返回false。</returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HMSet(System.String,System.Object[])">
            <summary>
            同时将多个 field-value (域-值)对设置到哈希表 key 中
            </summary>
            <param name="key"></param>
            <param name="keyValues">key1 value1 [key2 value2]</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HMSetAsync(System.String,System.Object[])">
            <summary>
            同时将多个 field-value (域-值)对设置到哈希表 key 中
            </summary>
            <param name="key"></param>
            <param name="keyValues">key1 value1 [key2 value2]</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HDel(System.String,System.String[])">
            <summary>
            删除一个或多个哈希表字段
            </summary>
            <param name="key"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HDelAsync(System.String,System.String[])">
            <summary>
            删除一个或多个哈希表字段
            </summary>
            <param name="key"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HExists(System.String,System.String)">
            <summary>
            查看哈希表 key 中，指定的字段是否存在
            </summary>
            <param name="key"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HKeys(System.String)">
            <summary>
            获取所有哈希表中的字段
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.HLen(System.String)">
            <summary>
            获取哈希表中字段的数量
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Subscribe(System.ValueTuple{System.String,System.Action{CSRedis.CSRedisClient.SubscribeMessageEventArgs}}[])">
            <summary>
            订阅，根据分区规则返回SubscribeObject，Subscribe(("chan1", msg => Console.WriteLine(msg.Body)),("chan2", msg => Console.WriteLine(msg.Body)))
            </summary>
            <param name="channels">频道和接收器</param>
            <returns>返回可停止订阅的对象</returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.SubscribeList(System.String[],System.Action{System.String,System.String})">
            <summary>
            使用lpush + blpop订阅端（多端争抢模式），只有一端收到消息
            </summary>
            <param name="listKeys">支持多个 key（不含prefix前辍）</param>
            <param name="onMessage">接收消息委托，参数1：key；参数2：消息体</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.PSubscribe(System.String[],System.Action{CSRedis.CSRedisClient.PSubscribePMessageEventArgs})">
            <summary>
            模糊订阅，订阅所有分区节点(同条消息只处理一次），返回SubscribeObject，PSubscribe(new [] { "chan1*", "chan2*"}, msg => Console.WriteLine(msg.Body))
            </summary>
            <param name="channelPatterns">模糊频道</param>
            <param name="pmessage">接收器</param>
            <returns>返回可停止模糊订阅的对象</returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Publish(System.String,System.String)">
            <summary>
            用于将信息发送到指定分区节点的频道，最终消息发布格式：1|message
            </summary>
            <param name="channel">频道名</param>
            <param name="message">消息文本</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.Ping">
            <summary>
            查看服务是否运行
            </summary>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.CacheShell``1(System.String,System.TimeSpan,System.Func{``0})">
            <summary>
            缓存壳
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="expire">过期时间</param>
            <param name="getData">获取源数据的函数</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.CacheShell``1(System.String,System.String,System.TimeSpan,System.Func{``0})">
            <summary>
            缓存壳(哈希表)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="field">字段</param>
            <param name="expire">过期时间</param>
            <param name="getData">获取源数据的函数</param>
            <returns></returns>
        </member>
        <member name="M:tdb.csredis.CSRedisCache.CacheShell``1(System.String,System.String[],System.TimeSpan,System.Func{System.String[],System.ValueTuple{System.String,``0}[]})">
            <summary>
            缓存壳(哈希表)，将 fields 每个元素存储到单独的缓存片，实现最大化复用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="fields">字段</param>
            <param name="expire">过期时间</param>
            <param name="getData">获取源数据的函数，输入参数是没有缓存的 fields，返回值应该是 (field, value)[]</param>
            <returns></returns>
        </member>
    </members>
</doc>
